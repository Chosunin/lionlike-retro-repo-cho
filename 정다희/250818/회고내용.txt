*Java 언어의 특징 3가지*
1.플랫폼 독립성: 한 번 만든 프로그램을 다양한 환경에서 실행 가능
2.객체지향: 재사용이 쉽고 유지보수에 유리한 구조 제공
3.자동 메모리 관리: 가비지 컬렉터가 알아서 메모리 정리하여 누수 방지.
4.표준 라이브러리: 기본적으로 다양한 기능을 지원. 예) System.out.println()를 이용해 콘솔에 출력 가능

*JDK의 구성요소 3가지*
1.개발도구 : javac(자바컴파일러, 소스코드->바이트코드변환), java(JVM실행) 등
2.JRE: JDK안에 포함된 자바 실행 환경, JVM(바이트코드를 실제로 실행하는 가상머신)+표준 클래스 라이브러리로 이루어짐
3.추가 라이브러리 및 API: 보안, 네트워크, XMl 파싱, JDBC 등 다양한 라이브러리

*IDE란 무엇인가요?*
: Integrated Develoment Environment, 통합개발환경의 약자로 코딩, 디버그 컴파일, 배포 등 프로그램 개발에 필요한 모든 도구를 하나의 프로그램에서 제공하는 환경

*자바 식별자 규칙 7가지*
1.첫문자는 반드시 문자이거나 밑줄 또는 달러기호($)여야 한다. 숫자로 시작할 수 없다.
2.첫문자를 제외한 나머지 문자에는 문자,숫자,밑줄,달러기호 사용 가능
3.대소문자 구분: 자바는 대소문자를 구분하므로 codeTest와 CodeTest는 다른 식별자로 인식
4.예약어 사용 불가: 자바에서 이미 사용되고 있는 키워드(public, class, int, for, while등)는 사용 불가
5.공백 사용 불가: 식별자 사이에 공백을 넣을 수 없다.
6.길이 제한 없음: 식별자는 원하는 만큼 길게 만들 수 있다.
7.특수문자: 밑줄과 달러기호만 사용할 수 있음. 다른 특수문자는 사용 불가능

*Java 프로그램의 3가지 핵심요소*
1.클래스 선언 public class Test{}
2.main 메소드 public static void main(String[] args) {}
3.출력문 System.out.println(“Hello”);

*주석이란? 사용하는 이유?*
: 자바코드의 가독성과 유지보수성을 높이기 위해 사용. 단순한 설명용 주석부터 문서화를 위한 JavaDoc 주석까지 실무에서 주석은 필수로 사용된다. 프로그램 실행과 무관한 설명을 코드에 남긴다.

*한줄 주석, 여러줄 주석, JavaDoc 주석은 어떻게 쓰는지?*
1.한줄주석 : // 내용
2.두줄주석: /* 내용 */
3.JavaDoc: /** 내용 */

*JavaDoc의 주요 태그 3개 이상*
1.@param: 매개변수 설명
2.@return: 반환값 설명
3.@throw: 예외설명
4.@author: 작성자설명
5.@since: 도입 버전

*오늘 배운 것 중에 가장 중요하다고 생각하는 부분*
: JDK(자바 프로그램을 작성·컴파일·실행할 수 있게 해주는 도구)와 IDE(코드를 편하게 작성하고 관리할 수 있는 프로그램)를 설치한 후, 우리가 작성한 자연어 기반 코드(자바 코드)를 컴퓨터가 이해할 수 있는 바이트코드로 컴파일하고, JVM이 이를 실행해 출력까지 보여주는 전체 과정의 흐름을 이해하는 것이 가장 중요하다고 생각한다.

*오늘 배운 것 중에 궁금한점 또는 이해가 안되는 부분 (혹은 해결하지 못한 부분)*
: 환경변수 설정하는 부분이 왜 해야하는지 잘 이해가 되지 않아서 조금 더 깊게 찾아봐야 할 것 같다.

*오늘 수업중에 오류가 발생하여 해결 한 부분이 있나요? (어떤 오류였는지, 어떻게 해결하였는지 자세히 작성)*
1.vscode를 삭제했다가 다시 설치하니, code 명령어가 실행되지 않았다. vscode 파일이 다운로드 폴더에 있었고, 응용프로그램에 옮겨주었더니 경로를 제대로 찾아서 code 명령이 제대로 실행 되었다.
2.vscode로 작성한 java파일이 제대로 실행되지 않아서 오류를 살펴보니, vscode에서 java파일이 들어있는 패키지(폴더)를 열어야 정상적으로 실행되는데, 그냥 파일만 열어서 실행이 제대로 되지 않았다.
3.IntelliJ를 열어서 java 파일을 만들어서 코드를 작성했는데 JDK가 제대로 인식 되지 않아 코드가 실행 되지 않았다. 옵션에서 project와 modules의 SDK 버전을 맞춰주고, intelliJ를 재실행시키니 제대로 코드가 실행 되었다.
