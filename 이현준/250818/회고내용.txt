1. java 언어의 특징 - 자동 메모리 관리 기능으로 메모리를 직접 관리해야되는 어려움이 적고 메모리 누수 방지가 뛰어남 - 대규모 개발에 적합함 객채지향 프로그래밍이고 풍부한 라이브러리와 코드 재사용성이 좋아  유지보수 능력이 뛰어남 - 플랫폼의 독립성이 뛰어나 window, mac, linux 어디서든 실행이 가능함 

2. JDK의 구성요소 3가지 - JRE(Java Runtime Environment) : 자바 프로그램을 실행하는 데 필요한 환경으로 주로 표준 라이브러리로 구성되어있음 - 개발 도구  : 개발자가 프로그램을 작성하고 디버깅하는 데 필요한 도구들로 javac, java, jar 등이 있음 - 문서 : 미리 만들어진 API 문서 와 사용 가이드로 JavaDoc이 있음 

3. IDE란 무엇인가? - 개발자가 프로그래밍할 때 더 편하게 코드를 작성하고 실행할 수 있도록 도와주는 통합 개발 환경으로 Java에서는 주로 Intelllij, Eclipse 가 있고 현재 우리는 Intellij를 사용함 

4. 자바 식별자 규칙 7가지 - 식별자는 개발자가 직접 정의하는 클래스 이름, 변수 이름, 메서드 이름 등 을 의미하며 규칙으로는  
4.1 영문, 숫자, _, $만 사용 가능 
4.2 숫자로 시작 불가 
4.3 대소문자 구분 
4.4 공백 불가 
4.5 예약어 사용 불가 
4.6 길이 제한 없음 
4.7 주로 사용하는 단어 사용(관례적 이름) 

5. Java 프로그램의 3가지 핵심요소 
5.1 클래스 선언 
5.2 main 메서드 
5.3 출력문  

6. 주석이란? 사용하는 이유 - 주석이란 프로그램 실행과 무관한 설명을 코드에 남기는 것 - 사용하는 이유는 협업을 고려한 java 코드의 가독성과 유지보수성을 높이는 핵심 도구임으로 주석을 작성함 

7. 한줄 주석, 여러줄 주석, JavaDoc 주석은 어떻게 쓰는지? 
- 한줄 주석 : // ~~~ 
- 여러줄 주석(범위 주석) : /* ~~~ */ 
- JavaDoc : /** ~~~ */ 

8. JavaDoc의 주요태그 3개 이상 
8.1 @param : 메서드의 매개변수 설명 
8.2 @return : 메서드가 반환하는 값 설명 
8.3 @throws : 메서드 실행 중 발생할 수 있는 예외 설명 

9. 오늘 배운 것 중에 가장 중요하다고 생각하는 부분 - 기초 환경 설정이 중요하다고 생각된다 처음에 설치한 JDK부터 IDE 설치 후 연동까지가 되어야 이후 개발이 진행이 수월하게 진행이 되기 때문이다  

10. 오늘 배운 것 중에 궁금한점 또는 이해가 안되는 부분(혹은 해결하지 못한 부분) - Intellij 사용이 처음이라 활용도가 많이 궁금함 

11. 오늘 수업중에 오류가 발생하여 해결 한 부분이 있나요?(어떤 오류였는지 어떻게 해결하였는지 자세히 작성) - Intellij에서 처음에 class 파일 생성 후 간단한 println 문을 작성했는데 실행이 되지않아 확인해보니 IDE가 연동이 되어있지 않아서 설정에서 연동 후 해결됨
